// <auto-generated />
using System;
using Firma.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Firma.Data.Migrations
{
    [DbContext(typeof(FirmaContext))]
    [Migration("20250514181655_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Firma.Data.Data.CMS.Aktualnosc", b =>
                {
                    b.Property<int>("IdAktualnosci")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAktualnosci"));

                    b.Property<string>("AdresURL")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAktualnosci");

                    b.ToTable("Aktualnosc");
                });

            modelBuilder.Entity("Firma.Data.Data.CMS.Strona", b =>
                {
                    b.Property<int>("IdStrony")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStrony"));

                    b.Property<string>("LinkTytul")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.Property<string>("Tresc")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdStrony");

                    b.ToTable("Strona");
                });

            modelBuilder.Entity("Firma.Data.Data.CMS.ZdjecieGaleria", b =>
                {
                    b.Property<int>("IdZdjecia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZdjecia"));

                    b.Property<string>("AdresURL")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Pozycja")
                        .HasColumnType("int");

                    b.HasKey("IdZdjecia");

                    b.ToTable("ZdjecieGaleria");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Cukiernia", b =>
                {
                    b.Property<int>("IdCukierni")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCukierni"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AdresURL")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GodzinyOtwarcia")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("IFrameGoogleMap")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdCukierni");

                    b.ToTable("Cukiernia");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Kategoria", b =>
                {
                    b.Property<int>("IdKategorii")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKategorii"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("IdKategorii");

                    b.ToTable("Kategoria");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Klient", b =>
                {
                    b.Property<int>("IdKlienta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKlienta"));

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DataRejestracji")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdKlienta");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Produkt", b =>
                {
                    b.Property<int>("IdProduktu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduktu"));

                    b.Property<string>("AdresURL")
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Cena")
                        .HasColumnType("money");

                    b.Property<bool>("Dostepnosc")
                        .HasColumnType("bit");

                    b.Property<int>("IdKategorii")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.HasKey("IdProduktu");

                    b.HasIndex("IdKategorii");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.ProduktSkladnik", b =>
                {
                    b.Property<int>("IdProduktSkladniki")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduktSkladniki"));

                    b.Property<int>("IdProduktu")
                        .HasColumnType("int");

                    b.Property<int>("IdSkladnika")
                        .HasColumnType("int");

                    b.Property<decimal>("IloscWymagana")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduktSkladniki");

                    b.HasIndex("IdProduktu");

                    b.HasIndex("IdSkladnika");

                    b.ToTable("ProduktSkladnik");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Reklamacja", b =>
                {
                    b.Property<int>("IdReklamacji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReklamacji"));

                    b.Property<DateTime>("DataZgloszenia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdZamowienia")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("IdReklamacji");

                    b.HasIndex("IdZamowienia");

                    b.ToTable("Reklamacja");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Skladnik", b =>
                {
                    b.Property<int>("IdSkladnika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSkladnika"));

                    b.Property<string>("AdresURL")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Jednostka")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdSkladnika");

                    b.ToTable("Skladnik");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Zamowienie", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZamowienia"));

                    b.Property<DateTime>("DataOdbioru")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataZamowienia")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlienta")
                        .HasColumnType("int");

                    b.Property<decimal>("Kwota")
                        .HasColumnType("money");

                    b.Property<string>("Numer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uwagi")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlienta");

                    b.ToTable("Zamowienie");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Produkt", b =>
                {
                    b.HasOne("Firma.Data.Data.Sklep.Kategoria", "Kategoria")
                        .WithMany("Produkty")
                        .HasForeignKey("IdKategorii")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategoria");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.ProduktSkladnik", b =>
                {
                    b.HasOne("Firma.Data.Data.Sklep.Produkt", "Produkt")
                        .WithMany("ProduktSkladniki")
                        .HasForeignKey("IdProduktu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Firma.Data.Data.Sklep.Skladnik", "Skladnik")
                        .WithMany("ProduktSkladniki")
                        .HasForeignKey("IdSkladnika")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produkt");

                    b.Navigation("Skladnik");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Reklamacja", b =>
                {
                    b.HasOne("Firma.Data.Data.Sklep.Zamowienie", "Zamowienie")
                        .WithMany()
                        .HasForeignKey("IdZamowienia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zamowienie");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Zamowienie", b =>
                {
                    b.HasOne("Firma.Data.Data.Sklep.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlienta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Kategoria", b =>
                {
                    b.Navigation("Produkty");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Klient", b =>
                {
                    b.Navigation("Zamowienia");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Produkt", b =>
                {
                    b.Navigation("ProduktSkladniki");
                });

            modelBuilder.Entity("Firma.Data.Data.Sklep.Skladnik", b =>
                {
                    b.Navigation("ProduktSkladniki");
                });
#pragma warning restore 612, 618
        }
    }
}
